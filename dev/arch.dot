digraph grew {
  node [shape=Mrecord];
  rankdir = LR;
  Grew_types [fillcolor=yellow, shape=record, label="Grew_types|String_set\nString_map\nString_opt_map\nInt_set\nInt_map\n&lt;cluster_type&gt;\nClustered"]
  Grew_utils [label="Grew_utils|Cmp\nRange\nLoc\nError\nRange\nString_\nFile\nArray_\nList_\n&lt;S&gt;\nMassoc_make()\nId\nTimeout\nGlobal\nDependencies\nPid\nPid_set\nPid_map\nPid_massoc\nGid\nGid_map\nGid_set\nGid_massoc\nFeature_value"]
  grew_ast [label="grew_ast|Ast\nLexicon\nLexicons"]
  grew_loader [label="grew_loader|Loader\nParser"]
  grew_fs [label="grew_fs|G_fs\nP_fs"]
  grew_edge [label="grew_edge|G_edge\nLabel_cst\nP_edge"]
  grew_node [label="grew_node|G_node\nP_node"]
  grew_command [label="grew_command|Command"]
  grew_graph [label="grew_graph|P_graph\nG_deco\nG_graph\nDelta\nGraph_with_history\nGraph_with_history_set"]
  grew_rule [label="grew_rule|Pattern\nMatching\nRule"]
  grew_grs [label="grew_grs|Grs"]
  grew_corpus [label="grew_corpus|Corpus\nCorpus_desc"]
  libgrew [fillcolor=yellow, shape=record]
grew_ast -> Grew_utils -> Grew_types
grew_edge -> grew_ast
grew_fs -> grew_ast
grew_command -> grew_edge
grew_command -> grew_fs
grew_node -> grew_edge
grew_node -> grew_fs
grew_graph -> grew_node
grew_rule -> grew_command
grew_rule -> grew_graph
grew_grs -> grew_rule
grew_rule -> grew_loader -> grew_lexer -> grew_parser -> grew_ast
grew_corpus -> grew_grs
libgrew -> grew_corpus

}