digraph grew {
  node [shape=Mrecord];
  rankdir = LR;
  grew_base [label="grew_base|String_set\nString_map\nInt_set\nInt_map\nLoc\nError\nString_\nDot\nFile\nArray_\nList_\nMassoc_make()\nId\nTimeout\nGlobal"]
  grew_types [label="grew_types|Pid\nPid_set\nPid_map\nGid\nGid_map\nMassoc_gid\nMassoc_pid\nMassoc_string\nLexicon\nLexicons\nConcat_item"]
  grew_ast [label="grew_ast|Ast"]
  grew_domain [label="grew_domain|Label_domain\nFeature_domain\nDomain"]
  grew_loader [label="grew_loader|Loader\nParser"]
  grew_fs [label="grew_fs|Feature_value\nG_feature\nP_feature\nG_fs\nP_fs"]
  grew_edge [label="grew_edge|Label\nLabel_cst\nG_edge\nP_edge"]
  grew_node [label="grew_node|G_node\nP_node"]
  grew_command [label="grew_command|Command"]
  grew_graph [label="grew_graph|P_deco\nP_graph\nG_deco\nG_graph"]
  grew_rule [label="grew_rule|Rule"]
  grew_grs [label="grew_grs|Grs"]

grew_domain -> grew_ast -> grew_types -> grew_base
grew_edge -> grew_domain
grew_fs -> grew_domain
grew_command -> grew_edge
grew_command -> grew_fs
grew_node -> grew_edge
grew_node -> grew_fs
grew_graph -> grew_node
grew_graph -> grew_command
libgrew_types -> grew_graph
grew_rule -> libgrew_types
grew_grs -> grew_rule
grew_grs -> grew_loader -> grew_lexer -> grew_parser -> grew_ast
libgrew -> grew_grs

libgrew -> libgrew_types [style=dotted]
}