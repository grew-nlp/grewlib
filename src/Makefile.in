
FILES_DEP = grew_utils grew_ast grew_fs grew_edge grew_node grew_graph grew_types grew_command grew_rule grew_grs
FILES_ML = $(FILES_DEP:%=%.ml)
FILES_MLI = $(FILES_DEP:%=%.mli)
FILES_CMI = $(FILES_DEP:%=%.cmi)
FILES_CMO = $(FILES_DEP:%=%.cmo)
FILES_CMX = $(FILES_DEP:%=%.cmx)

PARSER_DEP = parser_global lexer gr_grs_parser grew_parser
PARSER_ML = $(PARSER_DEP:%=%.ml)
PARSER_MLI = $(PARSER_DEP:%=%.mli)
PARSER_CMI = $(PARSER_DEP:%=%.cmi)
PARSER_CMO = $(PARSER_DEP:%=%.cmo)
PARSER_CMX = $(PARSER_DEP:%=%.cmx)

.PHONY: parser HTMLer

all: grew_utils.cmx grew_ast.cmx parser HTMLer grew test
byte: grew_utils.cmo grew_ast.cmo parser.byte HTMLer.byte grew.byte test.byte


include ../config/Makefile



#executables

grew.byte: $(FILES_CMO) parser/parser_global.cmo parser_byte parser/grew_parser.cmo HTMLer/HTMLer.cmo grew.ml
	ocamlc $(BYTE_FLAGS) -o grew.byte $(ANSITERMINAL_BYTE) $(LOG_BYTE)  \
	$(FILES_CMO) -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo \
	grew.ml

grew: $(FILES_CMX) parser/parser_global.cmx parser_opt parser/grew_parser.cmx HTMLer/HTMLer.cmx grew.ml
	ocamlopt $(OPT_FLAGS) -o grew str.cmxa unix.cmxa $(ANSITERMINAL_OPT) $(LOG_OPT) \
	$(FILES_CMX) -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx \
	grew.ml

test.byte: parser/parser_global.cmo parser_byte parser/grew_parser.cmo HTMLer/HTMLer.cmo $(FILES_CMO) $(FILES_CMI) test.ml
	ocamlc $(BYTE_FLAGS) -o test.byte $(ANSITERMINAL_BYTE) $(LOG_BYTE) \
	$(FILES_CMO) -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo \
	test.ml

test: parser/parser_global.cmx parser_opt parser/grew_parser.cmx HTMLer/HTMLer.cmx $(FILES_CMX) $(FILES_CMI) test.ml
	ocamlopt $(OPT_FLAGS) -o test str.cmxa unix.cmxa $(ANSITERMINAL_OPT) $(LOG_OPT) \
	$(FILES_CMX) -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx \
	test.ml

#parser
parser_opt: 
	@make -C parser

parser_byte: 
	@make -C parser byte

#HTMLer
HTMLer_opt: 
	@make -C HTMLer

HTMLer_byte: 
	@make -C HTMLer byte

# librairie

libgrew.mli : grew_types.mli
	rm -rf libgrew.mli
	touch libgrew.mli
	echo "(** Grew Library" > libgrew.mli
	echo "@author paul.masson\@inria.fr" >> libgrew.mli
	echo "@author bruno.guillaumme\@inria.fr" >> libgrew.mli
	echo "@version 1.0.0" >> libgrew.mli
	echo "*)" >> libgrew.mli
	echo "" >> libgrew.mli
	cat grew_types.mli >> libgrew.mli
	echo "" >> libgrew.mli
	echo "" >> libgrew.mli
	cat libgrew_.mli >> libgrew.mli

libgrew.cma : $(FILES_CMO) parser_byte HTMLer_byte libgrew.mli libgrew.ml
	rm libgrew.mli
	@make libgrew.mli
ifeq (@DEP2PICT@,no) 
	ocamlc -c -pp 'camlp4o pa_macro.cmo' $(BYPE_FLAGS) $(FILES_CMO) str.cma -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo libgrew.mli
	ocamlc -a -o libgrew.cma $(BYPE_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\"' -linkall $(FILES_CMO) -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo libgrew.ml
else
	ocamlc -c -pp 'camlp4o pa_macro.cmo -DDEP2PICT' $(FILES_CMO) str.cma -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo libgrew.mli
	ocamlc -a -o libgrew.cma -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\" -DDEP2PICT' -linkall $(FILES_CMO) -I parser $(PARSER_CMO) -I HTMLer HTMLer.cmo libgrew.ml
endif

libgrew.cmxa : $(FILES_CMX) parser_opt HTMLer_opt libgrew.mli libgrew.ml
	rm libgrew.mli
	@make libgrew.mli
ifeq (@DEP2PICT@,no)
	ocamlopt -c -pp 'camlp4o pa_macro.cmo' $(OPT_FLAGS) $(FILES_CMX) str.cmxa -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx libgrew.mli
	ocamlopt -a -o libgrew.cmxa $(OPT_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\"' -linkall $(FILES_CMX) -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx libgrew.ml
else
	ocamlopt -c -pp 'camlp4o pa_macro.cmo -DDEP2PICT' $(FILES_CMX) str.cmxa -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx libgrew.mli
	ocamlopt -a -o libgrew.cmxa -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\" -DDEP2PICT' -linkall $(FILES_CMX) -I parser $(PARSER_CMX) -I HTMLer HTMLer.cmx libgrew.ml
endif

DEPENDS_DIR= -I parser -I HTMLer

###### grew_core.ml ##############################################################
GREW_CORE_DEP = grew_types
GREW_CORE_CMI = $(GREW_CORE_DEP:%=%.cmi)
GREW_CORE_CMO = $(GREW_CORE_DEP:%=%.cmo)
GREW_CORE_CMX = $(GREW_CORE_DEP:%=%.cmx)

grew_core.cmi: $(GREW_CORE_CMI) grew_core.mli
	ocamlc -c grew_core.mli

grew_core.cmo: $(GREW_CORE_CMO) parser_byte grew_core.cmi grew_core.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) $(GREW_CORE_CMO) grew_core.ml

grew_core.cmx: $(GREW_CORE_CMX) parser_opt grew_core.cmi grew_core.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) $(GREW_CORE_CMX) grew_core.ml
################################################################################

###### grew_utils.ml ##############################################################
GREW_UTILS_DEP = 
GREW_UTILS_CMI = $(GREW_UTILS_DEP:%=%.cmi)
GREW_UTILS_CMO = $(GREW_UTILS_DEP:%=%.cmo)
GREW_UTILS_CMX = $(GREW_UTILS_DEP:%=%.cmx)

grew_utils.cmi: $(GREW_UTILS_CMI) grew_utils.mli
	ocamlc -c grew_utils.mli

grew_utils.cmo: $(GREW_UTILS_CMO) grew_utils.cmi grew_utils.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_utils.ml

grew_utils.cmx: $(GREW_UTILS_CMX) grew_utils.cmi grew_utils.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_utils.ml
################################################################################


###### grew_ast.ml ##############################################################
GREW_AST_DEP = grew_utils
GREW_AST_CMI = $(GREW_AST_DEP:%=%.cmi)
GREW_AST_CMO = $(GREW_AST_DEP:%=%.cmo)
GREW_AST_CMX = $(GREW_AST_DEP:%=%.cmx)

grew_ast.cmi: $(GREW_AST_CMI) grew_ast.mli
	ocamlc -c grew_ast.mli

grew_ast.cmo: $(GREW_AST_CMO) grew_ast.cmi grew_ast.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_ast.ml

grew_ast.cmx: $(GREW_AST_CMX) grew_ast.cmi grew_ast.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_ast.ml
################################################################################


###### grew_fs.ml ##############################################################
GREW_FS_DEP = grew_utils grew_ast
GREW_FS_CMI = $(GREW_FS_DEP:%=%.cmi)
GREW_FS_CMO = $(GREW_FS_DEP:%=%.cmo)
GREW_FS_CMX = $(GREW_FS_DEP:%=%.cmx)

grew_fs.cmi: $(GREW_FS_CMI) grew_fs.mli
	ocamlc -c grew_fs.mli

grew_fs.cmo: $(GREW_FS_CMO) grew_fs.cmi grew_fs.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_fs.ml

grew_fs.cmx: $(GREW_FS_CMX) grew_fs.cmi grew_fs.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_fs.ml
################################################################################


###### grew_edge.ml ##############################################################
GREW_EDGE_DEP = grew_utils grew_ast
GREW_EDGE_CMI = $(GREW_EDGE_DEP:%=%.cmi)
GREW_EDGE_CMO = $(GREW_EDGE_DEP:%=%.cmo)
GREW_EDGE_CMX = $(GREW_EDGE_DEP:%=%.cmx)

grew_edge.cmi: $(GREW_EDGE_CMI) grew_edge.mli
	ocamlc -c grew_edge.mli

grew_edge.cmo: $(GREW_EDGE_CMO) grew_edge.cmi grew_edge.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_edge.ml

grew_edge.cmx: $(GREW_EDGE_CMX) grew_edge.cmi grew_edge.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_edge.ml
################################################################################


###### grew_node.ml ##############################################################
GREW_NODE_DEP = grew_utils grew_ast grew_fs grew_edge
GREW_NODE_CMI = $(GREW_NODE_DEP:%=%.cmi)
GREW_NODE_CMO = $(GREW_NODE_DEP:%=%.cmo)
GREW_NODE_CMX = $(GREW_NODE_DEP:%=%.cmx)

grew_node.cmi: $(GREW_NODE_CMI) grew_node.mli
	ocamlc -c grew_node.mli

grew_node.cmo: $(GREW_NODE_CMO) grew_node.cmi grew_node.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_node.ml

grew_node.cmx: $(GREW_NODE_CMX) grew_node.cmi grew_node.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_node.ml
################################################################################


###### grew_graph.ml ##############################################################
GREW_GRAPH_DEP = grew_utils grew_ast grew_command grew_edge grew_fs grew_node 
GREW_GRAPH_CMI = $(GREW_GRAPH_DEP:%=%.cmi)
GREW_GRAPH_CMO = $(GREW_GRAPH_DEP:%=%.cmo)
GREW_GRAPH_CMX = $(GREW_GRAPH_DEP:%=%.cmx)

grew_graph.cmi: $(GREW_GRAPH_CMI) grew_graph.mli
	ocamlc -c grew_graph.mli

grew_graph.cmo: $(GREW_GRAPH_CMO) grew_graph.cmi grew_graph.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_graph.ml

grew_graph.cmx: $(GREW_GRAPH_CMX) grew_graph.cmi grew_graph.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_graph.ml
################################################################################


###### grew_types.ml ##############################################################
GREW_TYPES_DEP = grew_graph 
GREW_TYPES_CMI = $(GREW_TYPES_DEP:%=%.cmi)
GREW_TYPES_CMO = $(GREW_TYPES_DEP:%=%.cmo)
GREW_TYPES_CMX = $(GREW_TYPES_DEP:%=%.cmx)

grew_types.cmi: $(GREW_TYPES_CMI) grew_types.mli
	ocamlc -c grew_types.mli

grew_types.cmo: $(GREW_TYPES_CMO) grew_types.cmi grew_types.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_types.ml

grew_types.cmx: $(GREW_TYPES_CMX) grew_types.cmi grew_types.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_types.ml
################################################################################


###### grew_command.ml ##############################################################
GREW_COMMAND_DEP = grew_utils grew_ast grew_edge grew_fs
GREW_COMMAND_CMI = $(GREW_COMMAND_DEP:%=%.cmi)
GREW_COMMAND_CMO = $(GREW_COMMAND_DEP:%=%.cmo)
GREW_COMMAND_CMX = $(GREW_COMMAND_DEP:%=%.cmx)

grew_command.cmi: $(GREW_COMMAND_CMI) grew_command.mli
	ocamlc -c grew_command.mli

grew_command.cmo: $(GREW_COMMAND_CMO) grew_command.cmi grew_command.ml
	ocamlc $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_command.ml

grew_command.cmx: $(GREW_COMMAND_CMX) grew_command.cmi grew_command.ml
	ocamlopt $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_command.ml
################################################################################


###### grew_rule.ml ##############################################################
GREW_RULE_DEP = grew_utils grew_ast grew_command grew_edge grew_fs grew_node grew_types grew_graph
GREW_RULE_CMI = $(GREW_RULE_DEP:%=%.cmi)
GREW_RULE_CMO = $(GREW_RULE_DEP:%=%.cmo)
GREW_RULE_CMX = $(GREW_RULE_DEP:%=%.cmx)

grew_rule.cmi: $(GREW_RULE_CMI) grew_rule.mli
ifeq (@DEP2PICT@,no)
	ocamlc -c -pp 'camlp4o pa_macro.cmo' grew_rule.mli
else
	ocamlc -c -pp 'camlp4o pa_macro.cmo -DDEP2PICT' grew_rule.mli
endif

grew_rule.cmo: $(GREW_RULE_CMO) grew_rule.cmi grew_rule.ml
ifeq (@DEP2PICT@,no)
	ocamlc -pp 'camlp4o pa_macro.cmo' $(BYTE_FLAGS) -c $(DEPENDS_DIR) grew_rule.ml
else
	ocamlc -pp 'camlp4o pa_macro.cmo -DDEP2PICT' $(BYTE_FLAGS) -c $(DEPENDS_DIR) $(DEP2PICT_BYTE) grew_rule.ml
endif

grew_rule.cmx: $(GREW_RULE_CMX) grew_rule.cmi grew_rule.ml
ifeq (@DEP2PICT@,no)
	ocamlopt -pp 'camlp4o pa_macro.cmo' $(OPT_FLAGS) -c $(DEPENDS_DIR) grew_rule.ml
else
	ocamlopt -pp 'camlp4o pa_macro.cmo -DDEP2PICT' $(OPT_FLAGS) -c $(DEPENDS_DIR) $(DEP2PICT_OPT) grew_rule.ml
endif
################################################################################


###### grew_grs.ml ##############################################################
GREW_GRS_DEP = grew_utils grew_edge grew_types grew_graph grew_rule
GREW_GRS_CMI = $(GREW_GRS_DEP:%=%.cmi)
GREW_GRS_CMO = $(GREW_GRS_DEP:%=%.cmo)
GREW_GRS_CMX = $(GREW_GRS_DEP:%=%.cmx)

grew_grs.cmi: $(GREW_GRS_CMI) grew_grs.mli
ifeq (@DEP2PICT@,no)
	ocamlc -c -pp 'camlp4o pa_macro.cmo' grew_grs.mli
else
	ocamlc -c -pp 'camlp4o pa_macro.cmo -DDEP2PICT' grew_grs.mli
endif

grew_grs.cmo: $(GREW_GRS_CMO) grew_grs.cmi grew_grs.ml
ifeq (@DEP2PICT@,no)
	ocamlc $(BYTE_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\"' -c $(DEPENDS_DIR) grew_grs.ml
else
	ocamlc $(BYTE_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\" -DDEP2PICT' -c $(DEPENDS_DIR) grew_grs.ml
endif

grew_grs.cmx: $(GREW_GRS_CMX) grew_grs.cmi grew_grs.ml
ifeq (@DEP2PICT@,no)
	ocamlopt $(OPT_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\"' -c $(DEPENDS_DIR) grew_grs.ml
else
	ocamlopt $(OPT_FLAGS) -pp 'camlp4o pa_macro.cmo -DDATA_DIR=\"$(DATA_DIR)\" -DDEP2PICT' -c $(DEPENDS_DIR) grew_grs.ml
endif
################################################################################

# others

dep:
	rm depend
	ocamldep *.ml* > depend


clean: 
	@make -C HTMLer cleanup
	@make -C parser clean
	rm -rf *.cmi *.cmo *.cmxa *.cma *.cmx *.o *.annot
	rm -f grew grew.byte
	rm -f test test.byte
	rm -f *.nf *.png *.html

purge_makefile:
	@make -C HTMLer purge
	@make -C parser purge
	@make purge

doc:
	rm libgrew.mli
	@make libgrew.mli
	mkdir -p ../doc
	ocamldoc -html -d ../doc libgrew.mli
